name: Build and Release

on:
  create:
    branches:
      - main
    tags:
      - "*"

permissions:
  contents: write # needed to create releases

jobs:
  build:
    name: Build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Build Game
        run: mkdir artifact ; echo ${{ github.sha }} > artifact/Release.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: artifact
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: artifact
      - name: Display structure of downloaded artifact
        run: ls -R
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          commitMode: true
          # This defines a regex to extract the label from the commit message. Handling flags from the [Conventional Commit Standards](https://www.conventionalcommits.org/en/v1.0.0/)
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}",
              "categories": [
                {
                    "title": "## Feature",
                    "labels": ["feat", "feature"]
                },
                {
                    "title": "## Fix",
                    "labels": ["fix", "bug"]
                },
                {
                    "title": "## Other",
                    "labels": []
                }
              ],
              "label_extractor": [
                {
                  "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "target": "$1",
                  "on_property": "title"
                }
              ],
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.github_release.outputs.changelog }}
          files: artifact/Release.txt
